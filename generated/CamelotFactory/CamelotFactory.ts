// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class FeePercentOwnershipTransferred extends ethereum.Event {
  get params(): FeePercentOwnershipTransferred__Params {
    return new FeePercentOwnershipTransferred__Params(this);
  }
}

export class FeePercentOwnershipTransferred__Params {
  _event: FeePercentOwnershipTransferred;

  constructor(event: FeePercentOwnershipTransferred) {
    this._event = event;
  }

  get prevOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class FeeToTransferred extends ethereum.Event {
  get params(): FeeToTransferred__Params {
    return new FeeToTransferred__Params(this);
  }
}

export class FeeToTransferred__Params {
  _event: FeeToTransferred;

  constructor(event: FeeToTransferred) {
    this._event = event;
  }

  get prevFeeTo(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newFeeTo(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OwnerFeeShareUpdated extends ethereum.Event {
  get params(): OwnerFeeShareUpdated__Params {
    return new OwnerFeeShareUpdated__Params(this);
  }
}

export class OwnerFeeShareUpdated__Params {
  _event: OwnerFeeShareUpdated;

  constructor(event: OwnerFeeShareUpdated) {
    this._event = event;
  }

  get prevOwnerFeeShare(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get ownerFeeShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get prevOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PairCreated extends ethereum.Event {
  get params(): PairCreated__Params {
    return new PairCreated__Params(this);
  }
}

export class PairCreated__Params {
  _event: PairCreated;

  constructor(event: PairCreated) {
    this._event = event;
  }

  get token0(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get token1(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get pair(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get length(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }
}

export class ReferrerFeeShareUpdated extends ethereum.Event {
  get params(): ReferrerFeeShareUpdated__Params {
    return new ReferrerFeeShareUpdated__Params(this);
  }
}

export class ReferrerFeeShareUpdated__Params {
  _event: ReferrerFeeShareUpdated;

  constructor(event: ReferrerFeeShareUpdated) {
    this._event = event;
  }

  get referrer(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get prevReferrerFeeShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get referrerFeeShare(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class SetStableOwnershipTransferred extends ethereum.Event {
  get params(): SetStableOwnershipTransferred__Params {
    return new SetStableOwnershipTransferred__Params(this);
  }
}

export class SetStableOwnershipTransferred__Params {
  _event: SetStableOwnershipTransferred;

  constructor(event: SetStableOwnershipTransferred) {
    this._event = event;
  }

  get prevOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class CamelotFactory__feeInfoResult {
  value0: BigInt;
  value1: Address;

  constructor(value0: BigInt, value1: Address) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    return map;
  }

  get_ownerFeeShare(): BigInt {
    return this.value0;
  }

  get_feeTo(): Address {
    return this.value1;
  }
}

export class CamelotFactory extends ethereum.SmartContract {
  static bind(address: Address): CamelotFactory {
    return new CamelotFactory("CamelotFactory", address);
  }

  OWNER_FEE_SHARE_MAX(): BigInt {
    let result = super.call(
      "OWNER_FEE_SHARE_MAX",
      "OWNER_FEE_SHARE_MAX():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_OWNER_FEE_SHARE_MAX(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "OWNER_FEE_SHARE_MAX",
      "OWNER_FEE_SHARE_MAX():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  REFERER_FEE_SHARE_MAX(): BigInt {
    let result = super.call(
      "REFERER_FEE_SHARE_MAX",
      "REFERER_FEE_SHARE_MAX():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_REFERER_FEE_SHARE_MAX(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "REFERER_FEE_SHARE_MAX",
      "REFERER_FEE_SHARE_MAX():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  allPairs(param0: BigInt): Address {
    let result = super.call("allPairs", "allPairs(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);

    return result[0].toAddress();
  }

  try_allPairs(param0: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("allPairs", "allPairs(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  allPairsLength(): BigInt {
    let result = super.call("allPairsLength", "allPairsLength():(uint256)", []);

    return result[0].toBigInt();
  }

  try_allPairsLength(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "allPairsLength",
      "allPairsLength():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  createPair(tokenA: Address, tokenB: Address): Address {
    let result = super.call(
      "createPair",
      "createPair(address,address):(address)",
      [ethereum.Value.fromAddress(tokenA), ethereum.Value.fromAddress(tokenB)]
    );

    return result[0].toAddress();
  }

  try_createPair(
    tokenA: Address,
    tokenB: Address
  ): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "createPair",
      "createPair(address,address):(address)",
      [ethereum.Value.fromAddress(tokenA), ethereum.Value.fromAddress(tokenB)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeInfo(): CamelotFactory__feeInfoResult {
    let result = super.call("feeInfo", "feeInfo():(uint256,address)", []);

    return new CamelotFactory__feeInfoResult(
      result[0].toBigInt(),
      result[1].toAddress()
    );
  }

  try_feeInfo(): ethereum.CallResult<CamelotFactory__feeInfoResult> {
    let result = super.tryCall("feeInfo", "feeInfo():(uint256,address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new CamelotFactory__feeInfoResult(
        value[0].toBigInt(),
        value[1].toAddress()
      )
    );
  }

  feePercentOwner(): Address {
    let result = super.call(
      "feePercentOwner",
      "feePercentOwner():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_feePercentOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "feePercentOwner",
      "feePercentOwner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  feeTo(): Address {
    let result = super.call("feeTo", "feeTo():(address)", []);

    return result[0].toAddress();
  }

  try_feeTo(): ethereum.CallResult<Address> {
    let result = super.tryCall("feeTo", "feeTo():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPair(param0: Address, param1: Address): Address {
    let result = super.call("getPair", "getPair(address,address):(address)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromAddress(param1)
    ]);

    return result[0].toAddress();
  }

  try_getPair(param0: Address, param1: Address): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPair",
      "getPair(address,address):(address)",
      [ethereum.Value.fromAddress(param0), ethereum.Value.fromAddress(param1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ownerFeeShare(): BigInt {
    let result = super.call("ownerFeeShare", "ownerFeeShare():(uint256)", []);

    return result[0].toBigInt();
  }

  try_ownerFeeShare(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ownerFeeShare",
      "ownerFeeShare():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  referrersFeeShare(param0: Address): BigInt {
    let result = super.call(
      "referrersFeeShare",
      "referrersFeeShare(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBigInt();
  }

  try_referrersFeeShare(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "referrersFeeShare",
      "referrersFeeShare(address):(uint256)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  setStableOwner(): Address {
    let result = super.call("setStableOwner", "setStableOwner():(address)", []);

    return result[0].toAddress();
  }

  try_setStableOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "setStableOwner",
      "setStableOwner():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get feeTo_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CreatePairCall extends ethereum.Call {
  get inputs(): CreatePairCall__Inputs {
    return new CreatePairCall__Inputs(this);
  }

  get outputs(): CreatePairCall__Outputs {
    return new CreatePairCall__Outputs(this);
  }
}

export class CreatePairCall__Inputs {
  _call: CreatePairCall;

  constructor(call: CreatePairCall) {
    this._call = call;
  }

  get tokenA(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get tokenB(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreatePairCall__Outputs {
  _call: CreatePairCall;

  constructor(call: CreatePairCall) {
    this._call = call;
  }

  get pair(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}

export class SetFeePercentOwnerCall extends ethereum.Call {
  get inputs(): SetFeePercentOwnerCall__Inputs {
    return new SetFeePercentOwnerCall__Inputs(this);
  }

  get outputs(): SetFeePercentOwnerCall__Outputs {
    return new SetFeePercentOwnerCall__Outputs(this);
  }
}

export class SetFeePercentOwnerCall__Inputs {
  _call: SetFeePercentOwnerCall;

  constructor(call: SetFeePercentOwnerCall) {
    this._call = call;
  }

  get _feePercentOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeePercentOwnerCall__Outputs {
  _call: SetFeePercentOwnerCall;

  constructor(call: SetFeePercentOwnerCall) {
    this._call = call;
  }
}

export class SetFeeToCall extends ethereum.Call {
  get inputs(): SetFeeToCall__Inputs {
    return new SetFeeToCall__Inputs(this);
  }

  get outputs(): SetFeeToCall__Outputs {
    return new SetFeeToCall__Outputs(this);
  }
}

export class SetFeeToCall__Inputs {
  _call: SetFeeToCall;

  constructor(call: SetFeeToCall) {
    this._call = call;
  }

  get _feeTo(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeToCall__Outputs {
  _call: SetFeeToCall;

  constructor(call: SetFeeToCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get _owner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetOwnerFeeShareCall extends ethereum.Call {
  get inputs(): SetOwnerFeeShareCall__Inputs {
    return new SetOwnerFeeShareCall__Inputs(this);
  }

  get outputs(): SetOwnerFeeShareCall__Outputs {
    return new SetOwnerFeeShareCall__Outputs(this);
  }
}

export class SetOwnerFeeShareCall__Inputs {
  _call: SetOwnerFeeShareCall;

  constructor(call: SetOwnerFeeShareCall) {
    this._call = call;
  }

  get newOwnerFeeShare(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetOwnerFeeShareCall__Outputs {
  _call: SetOwnerFeeShareCall;

  constructor(call: SetOwnerFeeShareCall) {
    this._call = call;
  }
}

export class SetReferrerFeeShareCall extends ethereum.Call {
  get inputs(): SetReferrerFeeShareCall__Inputs {
    return new SetReferrerFeeShareCall__Inputs(this);
  }

  get outputs(): SetReferrerFeeShareCall__Outputs {
    return new SetReferrerFeeShareCall__Outputs(this);
  }
}

export class SetReferrerFeeShareCall__Inputs {
  _call: SetReferrerFeeShareCall;

  constructor(call: SetReferrerFeeShareCall) {
    this._call = call;
  }

  get referrer(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get referrerFeeShare(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetReferrerFeeShareCall__Outputs {
  _call: SetReferrerFeeShareCall;

  constructor(call: SetReferrerFeeShareCall) {
    this._call = call;
  }
}

export class SetSetStableOwnerCall extends ethereum.Call {
  get inputs(): SetSetStableOwnerCall__Inputs {
    return new SetSetStableOwnerCall__Inputs(this);
  }

  get outputs(): SetSetStableOwnerCall__Outputs {
    return new SetSetStableOwnerCall__Outputs(this);
  }
}

export class SetSetStableOwnerCall__Inputs {
  _call: SetSetStableOwnerCall;

  constructor(call: SetSetStableOwnerCall) {
    this._call = call;
  }

  get _setStableOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetSetStableOwnerCall__Outputs {
  _call: SetSetStableOwnerCall;

  constructor(call: SetSetStableOwnerCall) {
    this._call = call;
  }
}
