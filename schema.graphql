type Protocol @entity {
  " The address of the core factory for camelot "
  id: Bytes!

  " The number of pools deployed "
  spNFTCount: Int!

  " Sub entity to traverse into the pools from the protocol level "
  spNFT: [spNFT!]! @derivedFrom(field: "protocol")
}

type Account @entity {
  " The address of the wallet "
  id: Bytes!

  " Number of spNFTs this account has "
  spNFTCount: Int!

  " Sub entity to traverse into The current positions for the wallet "
  spNFT: [spNFT!]! @derivedFrom(field: "account")

  " Number of open positions this account has "
  openPositionCount: Int!
}

type spNFT @entity {
  " Token address "
  id: ID!

  " Owner of the spNFT "
  owner: Address!

  " Amount of the spNFT "
  amount: Int!

  " If staked in Nitro - what the address is "
  nitro: Address

  " What the lock duration is "
  lockDuration: Int

  " What the start time for the lock is "
  lockStartTime: Int

  " What the boost points are set to "
  bostPoints: Int

  " What the rewards multipler are "
  totalMultiplier: Int

  " Creation timestamp of the spNFT "
  createdAt: Timestamp!

  " The position of the spNFT "
  positions: [Position!]! @derivedFrom(field: "spNFT")

  " Whether the spNFT is boosted or not "
  boost: Boolean!
}

type Nitro @entity {
  " Token address "
  id: Address!

  " Creation timestamp "
  createdAt: Timestamp!

  " Pool owner "
  poolOwner: Address!

  " Amount deposited into pool "
  depositAmount: BigInt!

  " Amount withdrawn from the pool "
  withdrawAmount: Int

  " Rewards earned "
  rewardTokens: Amount
}

type Token @entity {
  " Token address "
  id: ID!

  " Token symbol "
  symbol: String!

  " Token name "
  name: String!

  " Token decimals "
  decimals: Int!
}
