specVersion: 0.0.5
schema:
  file: ./schema.graphql
dataSources:
  - kind: ethereum
    name: NFTPoolFactory
    network: arbitrum
    source:
      address: "0x6dB1EF0dF42e30acF139A70C1Ed0B7E6c51dBf6d"
      abi: NFTPoolFactory
      startBlock: 39339888
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Account
      abis:
        - name: NFTPoolFactory
          file: ./abis/NFTPoolFactory.json
      eventHandlers:
        - event: PoolCreated(indexed address,address)
          handler: handlePoolCreated
      file: ./src/camelot-factory.ts
  - kind: ethereum
    name: NitroPoolFactory
    network: arbitrum
    source:
      address: "0xe0a6b372Ac6AF4B37c7F3a989Fe5d5b194c24569"
      abi: NitroPoolFactory
      startBlock: 39342546
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Account
      abis:
        - name: NitroPoolFactory
          file: ./abis/NitroPoolFactory.json
      eventHandlers:
        - event: CreateNitroPool(address)
          handler: handleCreateNitroPool
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: createOwnershipTransferred
        - event: PublishNitroPool(address)
          handler: createPublishNitroPool
        - event: SetDefaultFee(uint256)
          handler: createSetDefaultFee
        - event: SetEmergencyRecoveryAddress(address)
          handler: createSetEmergencyRecoveryAddress
        - event: SetExemptedAddress(address,bool)
          handler: createSetExemptedAddress
        - event: SetFeeAddress(address)
          handler: createSetFeeAddress
        - event: SetNitroPoolOwner(address,address)
          handler: createSetNitroPoolOwner
      file: ./src/nft-pool-factory.ts
## TEMPLATE DATA SOURCES ##
templates:
  - name: NFTPool
    kind: ethereum/contract
    network: arbitrum
    source:
      abi: NFTPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/nft-pool.ts
      entities:
        - FeePercentOwnershipTransferred
      abis:
        - name: NFTPool
          file: ./abis/NFTPool.json
      eventHandlers:
        - event: LockPosition(indexed uint256,uint256)
          handler: handleLockPosition
        - event: AddToPosition(indexed uint256,address,uint256)
          handler: handleAddToPosition
        - event: CreatePosition(indexed uint256,uint256,uint256)
          handler: handleCreatePosition
        - event: HarvestPosition(indexed uint256,address,uint256)
          handler: HarvestPosition
        - event: MergePositions(indexed address,uint256[])
          handler: MergePositions
        - event: WithdrawFromPosition(indexed uint256,uint256)
          handler: WithdrawFromPosition
        - event: EmergencyWithdraw(indexed uint256,uint256)
          handler: EmergencyWithdraw
        - event: PoolUpdated(uint256,uint256)
          handler: PoolUpdated
        - event: SetBoost(indexed uint256,uint256)
          handler: SetBoost
        - event: SetBoostMultiplierSettings(uint256,uint256)
          handler: SetBoostMultiplierSettings
        - event: SplitPosition(indexed uint256,uint256,uint256)
          handler: SplitPosition
        - event: SetEmergencyUnlock(bool)
          handler: SetEmergencyUnlock
        - event: SetLockMultiplierSettings(uint256,uint256)
          handler: SetLockMultiplierSettings
        - event: Transfer(indexed address,indexed address,indexed uint256)
          handler: Transfer
  - name: NitroPool
    kind: ethereum/contract
    network: arbitrum
    source:
      abi: NitroPool
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      file: ./src/nft-pool.ts
      entities:
        - Account
      abis:
        - name: NitroPool
          file: ./abis/NitroPool.json
      eventHandlers:
        - event: ActivateEmergencyClose()
          handler: handleActivateEmergencyClose
        - event: AddRewardsToken1(uint256,uint256)
          handler: handleAddRewardsToken1
        - event: AddRewardsToken2(uint256,uint256)
          handler: handleAddRewardsToken2
        - event: Deposit(indexed address,uint256,uint256)
          handler: handleDeposit
        - event: EmergencyWithdraw(indexed address,uint256,uint256)
          handler: handleEmergencyWithdraw
        - event: Harvest(indexed address,address,uint256)
          handler: handleHarvest
        - event: OwnershipTransferred(indexed address,indexed address)
          handler: handleOwnershipTransferred
        - event: Publish()
          handler: handlePublish
        - event: SetCustomReqContract(address)
          handler: handleSetCustomReqContract
        - event: SetDateSettings(uint256,uint256,uint256)
          handler: handleSetDateSettings
        - event: SetDescription(string)
          handler: handleSetDescription
        - event: SetRequirements(uint256,uint256,uint256,bool)
          handler: handleSetRequirements
        - event: SetRewardsToken2(address)
          handler: handleSetRewardsToken2
        - event: UpdatePool()
          handler: handleUpdatePool
        - event: WhitelistUpdated()
          handler: handleWhitelistUpdated
        - event: Withdraw(indexed address,uint256,uint256)
          handler: handleWithdraw
        - event: WithdrawRewardsToken1(uint256,uint256)
          handler: handleWithdrawRewardsToken1
        - event: WithdrawRewardsToken2(uint256,uint256)
          handler: handleWithdrawRewardsToken2
